{"version":3,"sources":["webpack:///./src/pages/audits/edit.vue?683a","webpack:///src/pages/audits/edit.vue","webpack:///./src/pages/audits/edit.vue?fa91","webpack:///./src/pages/audits/edit.vue"],"names":[],"mappings":"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","file":"js/89.c60419a9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main-page\"},[(_vm.showHeader)?[_c('q-card',{staticClass:\"page-section q-py-sm q-px-md q-mb-md nice-shadow-18\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row justify-between q-col-gutter-md\"},[_c('div',{staticClass:\"col-12 col-md-auto \"},[_c('div',{},[_c('div',{staticClass:\"row  items-center q-col-gutter-sm q-px-sm\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"text-h6 text-primary\"},[_vm._v(\"Edit Audits\")])])])])])])])])]:_vm._e(),_c('section',{staticClass:\"page-section q-mb-md\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row q-col-gutter-md\"},[_c('div',{staticClass:\"col-md-9 col-12 comp-grid\"},[_c('q-card',{staticClass:\"q-pa-md nice-shadow-18\"},[_c('div',[(!_vm.loading)?_c('div',[_c('ValidationObserver',{ref:\"observer\",attrs:{\"tag\":\"form\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.startRecordUpdate()}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar invalid = ref.invalid;\nreturn [_c('div',{staticClass:\"row q-col-gutter-md\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    User Type \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"User Type\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrluser_type\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"User Type\",\"type\":\"text\",\"placeholder\":\"Enter User Type\",\"list\":\"user_type_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.user_type),callback:function ($$v) {_vm.$set(_vm.formData, \"user_type\", $$v)},expression:\"formData.user_type\"}}),_c('datalist',{attrs:{\"id\":\"user_type_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    User Id \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"User Id\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrluser_id\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"User Id\",\"type\":\"number\",\"placeholder\":\"Enter User Id\",\"step\":\"any\",\"list\":\"user_id_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.user_id),callback:function ($$v) {_vm.$set(_vm.formData, \"user_id\", $$v)},expression:\"formData.user_id\"}}),_c('datalist',{attrs:{\"id\":\"user_id_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Event *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Event\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlevent\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Event\",\"type\":\"text\",\"placeholder\":\"Enter Event\",\"list\":\"event_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.event),callback:function ($$v) {_vm.$set(_vm.formData, \"event\", $$v)},expression:\"formData.event\"}}),_c('datalist',{attrs:{\"id\":\"event_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Auditable Type *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Auditable Type\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlauditable_type\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Auditable Type\",\"type\":\"text\",\"placeholder\":\"Enter Auditable Type\",\"list\":\"auditable_type_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.auditable_type),callback:function ($$v) {_vm.$set(_vm.formData, \"auditable_type\", $$v)},expression:\"formData.auditable_type\"}}),_c('datalist',{attrs:{\"id\":\"auditable_type_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Auditable Id *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Auditable Id\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlauditable_id\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Auditable Id\",\"type\":\"number\",\"placeholder\":\"Enter Auditable Id\",\"step\":\"any\",\"list\":\"auditable_id_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.auditable_id),callback:function ($$v) {_vm.$set(_vm.formData, \"auditable_id\", $$v)},expression:\"formData.auditable_id\"}}),_c('datalist',{attrs:{\"id\":\"auditable_id_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Old Values \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"Old Values\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlold_values\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"rows\":\"5\",\"placeholder\":\"Enter Old Values\",\"type\":\"textarea\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.old_values),callback:function ($$v) {_vm.$set(_vm.formData, \"old_values\", $$v)},expression:\"formData.old_values\"}})]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    New Values \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"New Values\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlnew_values\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"rows\":\"5\",\"placeholder\":\"Enter New Values\",\"type\":\"textarea\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.new_values),callback:function ($$v) {_vm.$set(_vm.formData, \"new_values\", $$v)},expression:\"formData.new_values\"}})]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Url \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"Url\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlurl\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"rows\":\"5\",\"placeholder\":\"Enter Url\",\"type\":\"textarea\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.url),callback:function ($$v) {_vm.$set(_vm.formData, \"url\", $$v)},expression:\"formData.url\"}})]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Ip Address \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"Ip Address\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlip_address\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Ip Address\",\"type\":\"text\",\"placeholder\":\"Enter Ip Address\",\"list\":\"ip_address_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.ip_address),callback:function ($$v) {_vm.$set(_vm.formData, \"ip_address\", $$v)},expression:\"formData.ip_address\"}}),_c('datalist',{attrs:{\"id\":\"ip_address_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    User Agent \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"User Agent\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrluser_agent\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"User Agent\",\"type\":\"text\",\"placeholder\":\"Enter User Agent\",\"list\":\"user_agent_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.user_agent),callback:function ($$v) {_vm.$set(_vm.formData, \"user_agent\", $$v)},expression:\"formData.user_agent\"}}),_c('datalist',{attrs:{\"id\":\"user_agent_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Tags \\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{},\"name\":\"Tags\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrltags\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Tags\",\"type\":\"text\",\"placeholder\":\"Enter Tags\",\"list\":\"tags_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.tags),callback:function ($$v) {_vm.$set(_vm.formData, \"tags\", $$v)},expression:\"formData.tags\"}}),_c('datalist',{attrs:{\"id\":\"tags_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])])]),(_vm.showSubmitButton)?_c('div',{staticClass:\"text-center q-my-md\"},[_c('q-btn',{attrs:{\"rounded\":false,\"color\":\"primary\",\"no-caps\":\"\",\"unelevated\":\"\",\"type\":\"submit\",\"disabled\":invalid,\"icon\":\"send\",\"loading\":_vm.saving}},[_c('q-spinner-oval',{attrs:{\"slot\":\"loading\"},slot:\"loading\"}),_vm._v(\" Update\\n                                        \")],1)],1):_vm._e()]}}],null,false,2805981214)}),_vm._t(\"default\",null,{\"submit\":_vm.submit,\"saving\":_vm.saving})],2):_c('div',{staticClass:\"q-pa-sm text-center\"},[_c('q-spinner',{attrs:{\"size\":40,\"color\":\"accent\",\"indeterminate\":\"\"}}),_vm._v(\"\\n                                Loading...\\n                            \")],1)])])],1)])])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"main-page\">\r\n        <template v-if=\"showHeader\">\r\n            <q-card   class=\"page-section q-py-sm q-px-md q-mb-md nice-shadow-18\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-between q-col-gutter-md\">\r\n                        <div class=\"col-12 col-md-auto \">\r\n                            <div class=\"\">\r\n                                <div class=\"row  items-center q-col-gutter-sm q-px-sm\">\r\n                                    <div class=\"col\">\r\n                                        <div class=\"text-h6 text-primary\">Edit Audits</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </q-card>\r\n        </template>\r\n        <section class=\"page-section q-mb-md\">\r\n            <div class=\"container\">\r\n                <div class=\"row q-col-gutter-md\">\r\n                    <div class=\"col-md-9 col-12 comp-grid\">\r\n                        <q-card   class=\"q-pa-md nice-shadow-18\">\r\n                            <div>\r\n                                <div v-if=\"!loading\">\r\n                                    <ValidationObserver ref=\"observer\" v-slot=\"{ invalid }\" tag=\"form\" @submit.prevent=\"startRecordUpdate()\">\r\n                                        <!--[form-content-start]-->\r\n                                        <div class=\"row q-col-gutter-md\">\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        User Type \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"User Type\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrluser_type\" v-model=\"formData.user_type\"  label=\"User Type\" type=\"text\" placeholder=\"Enter User Type\"   list=\"user_type_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"user_type_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        User Id \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"User Id\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrluser_id\" v-model=\"formData.user_id\"  label=\"User Id\" type=\"number\" placeholder=\"Enter User Id\"   step=\"any\" list=\"user_id_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"user_id_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Event *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Event\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlevent\" v-model=\"formData.event\"  label=\"Event\" type=\"text\" placeholder=\"Enter Event\"   list=\"event_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"event_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Auditable Type *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Auditable Type\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlauditable_type\" v-model=\"formData.auditable_type\"  label=\"Auditable Type\" type=\"text\" placeholder=\"Enter Auditable Type\"   list=\"auditable_type_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"auditable_type_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Auditable Id *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Auditable Id\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlauditable_id\" v-model=\"formData.auditable_id\"  label=\"Auditable Id\" type=\"number\" placeholder=\"Enter Auditable Id\"   step=\"any\" list=\"auditable_id_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"auditable_id_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Old Values \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"Old Values\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlold_values\" rows=\"5\"  v-model=\"formData.old_values\" placeholder=\"Enter Old Values\"  type=\"textarea\"  :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        New Values \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"New Values\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlnew_values\" rows=\"5\"  v-model=\"formData.new_values\" placeholder=\"Enter New Values\"  type=\"textarea\"  :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Url \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"Url\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlurl\" rows=\"5\"  v-model=\"formData.url\" placeholder=\"Enter Url\"  type=\"textarea\"  :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Ip Address \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"Ip Address\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlip_address\" v-model=\"formData.ip_address\"  label=\"Ip Address\" type=\"text\" placeholder=\"Enter Ip Address\"   list=\"ip_address_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"ip_address_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        User Agent \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"User Agent\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrluser_agent\" v-model=\"formData.user_agent\"  label=\"User Agent\" type=\"text\" placeholder=\"Enter User Agent\"   list=\"user_agent_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"user_agent_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Tags \r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{}\" name=\"Tags\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrltags\" v-model=\"formData.tags\"  label=\"Tags\" type=\"text\" placeholder=\"Enter Tags\"   list=\"tags_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"tags_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!--[form-content-end]-->\r\n                                        <div v-if=\"showSubmitButton\" class=\"text-center q-my-md\">\r\n                                            <q-btn    :rounded=\"false\"  color=\"primary\"  no-caps  unelevated   type=\"submit\" :disabled=\"invalid\" icon=\"send\" :loading=\"saving\">\r\n                                                <q-spinner-oval slot=\"loading\" /> Update\r\n                                            </q-btn>\r\n                                        </div>\r\n                                    </ValidationObserver>\r\n                                    <slot :submit=\"submit\" :saving=\"saving\"></slot>\r\n                                </div>\r\n                                <div v-else class=\"q-pa-sm text-center\">\r\n                                    <q-spinner\r\n                                    :size=\"40\"\r\n                                    color=\"accent\"\r\n                                    indeterminate>\r\n                                    </q-spinner>\r\n                                    Loading...\r\n                                </div>\r\n                            </div>\r\n                        </q-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\n\timport { PageMixin } from \"../../mixins/page.js\";\r\n\timport { EditPageMixin } from \"../../mixins/editpage.js\";\r\n\timport { mapActions } from \"vuex\";\r\n\texport default {\r\n\t\tname: 'editAuditsPage',\r\n\t\tcomponents: {\r\n\t\t},\r\n\t\tmixins: [PageMixin, EditPageMixin ],\r\n\t\tprops: {\r\n\t\t\tpageName: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'audits',\r\n\t\t\t},\r\n\t\t\tidName: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'id',\r\n\t\t\t},\r\n\t\t\trouteName: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'auditsedit',\r\n\t\t\t},\r\n\t\t\tpagePath: {\r\n\t\t\t\ttype : String,\r\n\t\t\t\tdefault : 'audits/edit',\r\n\t\t\t},\r\n\t\t\tapiPath: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'audits/edit',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdata() {\r\n            return {\r\n\t\t\t\tformData: {\r\n\t\t\t\t\tuser_type: \"NULL\", user_id: \"NULL\", event: \"\", auditable_type: \"\", auditable_id: \"\", old_values: \"\", new_values: \"\", url: \"\", ip_address: \"NULL\", user_agent: \"NULL\", tags: \"NULL\", \r\n\t\t\t\t},\r\n        \t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tpageTitle:{\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn \"Edit Audits\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmeta () {\r\n\t\t\treturn {\r\n\t\t\t\ttitle: this.pageTitle // set browser page title\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t...mapActions('audits', ['updateRecord', 'fetchRecord']),\r\n\t\t\tasync startRecordUpdate(){\r\n\t\t\t\tconst isFormValid = await this.$refs.observer.validate();\r\n\t\t\t\tif(isFormValid){\r\n\t\t\t\t\tthis.saving = true;\r\n\t\t\t\t\tlet id = this.id;\r\n\t\t\t\t\tlet url = this.apiUrl;\r\n\t\t\t\t\tlet payload = this.normalizedFormData();\r\n\t\t\t\t\tlet data = { id, url, payload }\r\n\t\t\t\t\tthis.updateRecord(data).then(\r\n\t\t\t\t\t\t(response) => {\r\n\t\t\t\t\t\t\tthis.saving = false;\r\n\t\t\t\t\t\t\tthis.flashMsg(this.msgAfterUpdate);\r\n\t\t\t\t\t\t\tthis.resetForm();\r\n\t\t\t\t\t\t\tthis.closeDialogs();// close page dialog that if opened\r\n\t\t\t\t\t\t\tthis.navigateTo(`/audits`);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(response) => {\r\n\t\t\t\t\t\t\tthis.saving = false;\r\n\t\t\t\t\t\t\tthis.showPageRequestError(response);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tupdateFormFields: function(){\r\n\t\t\t\t//update form fields value after load from api\r\n\t\t\t\t//e.g convert fieldvalue (value,value2,value2) to array \r\n            },\r\n\t\t\tresetForm (){\r\n\t\t\t\t//reset form fields value\r\n\t\t\t\tthis.formData = {user_type: \"NULL\", user_id: \"NULL\", event: \"\", auditable_type: \"\", auditable_id: \"\", old_values: \"\", new_values: \"\", url: \"\", ip_address: \"NULL\", user_agent: \"NULL\", tags: \"NULL\", };\r\n\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\tthis.$refs.observer.reset();\r\n\t\t\t\t});\r\n\t\t\t\t//raise event to reset other custom form components\r\n\t\t\t\tthis.$EventBus.$emit(\"resetForm\");\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=a8ec348e&scoped=true&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a8ec348e\",\n  null\n  \n)\n\nexport default component.exports\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QSpinnerOval from 'quasar/src/components/spinner/QSpinnerOval.js';\nimport QSpinner from 'quasar/src/components/spinner/QSpinner.js';\nimport qInstall from \"../../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QCard,QInput,QBtn,QSpinnerOval,QSpinner});\n"],"sourceRoot":""}