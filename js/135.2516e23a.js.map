{"version":3,"sources":["webpack:///./src/pages/index/userregister.vue?940a","webpack:///src/pages/index/userregister.vue","webpack:///./src/pages/index/userregister.vue?7f59","webpack:///./src/pages/index/userregister.vue"],"names":[],"mappings":"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","file":"js/135.2516e23a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main-page\"},[(_vm.showHeader)?[_c('q-card',{staticClass:\"page-section q-py-sm q-px-md q-mb-md q-mb-md nice-shadow-18\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row justify-between q-col-gutter-md\"},[_c('div',{staticClass:\"col-md-8 col-12 \"},[_c('div',{},[_c('div',{staticClass:\"row  items-center q-col-gutter-sm q-px-sm\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"text-h6 text-primary\"},[_vm._v(\"User registration\")])])])])]),_c('div',{staticClass:\"col-md-4 col-12 comp-grid\"},[_c('div',{},[_c('div',{},[_c('div',{staticClass:\"text-center\"},[_vm._v(\"\\n                                    Already have an account?  \"),_c('q-btn',{attrs:{\"rounded\":false,\"no-caps\":\"\",\"unelevated\":\"\",\"color\":\"primary\",\"icon\":\"account_box\",\"to\":\"/\"}},[_vm._v(\" Login\")])],1)])])])])])])]:_vm._e(),_c('section',{staticClass:\"page-section q-mb-md\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row q-col-gutter-md\"},[_c('div',{staticClass:\"col-md-9 col-12 comp-grid\"},[_c('q-card',{staticClass:\"q-pa-md nice-shadow-18\"},[_c('div',[_c('ValidationObserver',{ref:\"observer\",attrs:{\"tag\":\"form\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.startSaveRecord()},\"reset\":_vm.resetForm},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar invalid = ref.invalid;\nreturn [_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                            Username *\\n                                        \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('check-duplicate',{attrs:{\"check-path\":\"components_data/users_username_exist/\"},scopedSlots:_vm._u([{key:\"default\",fn:function(checker){return [_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Username\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlusername\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"loading\":checker.loading,\"label\":\"Username\",\"type\":\"text\",\"placeholder\":\"Enter Username\",\"list\":\"username_list\",\"error\":(invalid && validated) || checker.exist,\"error-message\":errors[0] || 'Not available'},on:{\"blur\":checker.check},model:{value:(_vm.formData.username),callback:function ($$v) {_vm.$set(_vm.formData, \"username\", $$v)},expression:\"formData.username\"}}),_c('datalist',{attrs:{\"id\":\"username_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})]}}],null,true),model:{value:(_vm.formData.username),callback:function ($$v) {_vm.$set(_vm.formData, \"username\", $$v)},expression:\"formData.username\"}})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                            Password *\\n                                        \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Password\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlpassword\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Password\",\"type\":_vm.isPwd ? 'password' : 'text',\"placeholder\":\"Enter Password\",\"list\":\"password_list\",\"error\":invalid && validated,\"error-message\":errors[0]},scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('q-icon',{staticClass:\"cursor-pointer\",attrs:{\"name\":_vm.isPwd ? 'visibility_off' : 'visibility'},on:{\"click\":function($event){_vm.isPwd = !_vm.isPwd}}})]},proxy:true}],null,true),model:{value:(_vm.formData.password),callback:function ($$v) {_vm.$set(_vm.formData, \"password\", $$v)},expression:\"formData.password\"}}),_c('datalist',{attrs:{\"id\":\"password_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                            Confirm Password *\\n                                        \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true, is: _vm.formData.password},\"name\":\"Confirm Password\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"type\":\"password\",\"label\":\"Confirm Password\",\"placeholder\":\"Confirm Password\",\"error\":invalid && validated,\"error-message\":errors[0]},scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('q-icon',{staticClass:\"cursor-pointer\",attrs:{\"name\":_vm.isPwd ? 'visibility_off' : 'visibility'},on:{\"click\":function($event){_vm.isPwd = !_vm.isPwd}}})]},proxy:true}],null,true),model:{value:(_vm.formData.confirm_password),callback:function ($$v) {_vm.$set(_vm.formData, \"confirm_password\", $$v)},expression:\"formData.confirm_password\"}})]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                            Email *\\n                                        \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('check-duplicate',{attrs:{\"check-path\":\"components_data/users_email_exist/\"},scopedSlots:_vm._u([{key:\"default\",fn:function(checker){return [_c('ValidationProvider',{attrs:{\"rules\":{required:true, email:true},\"name\":\"Email\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlemail\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"loading\":checker.loading,\"label\":\"Email\",\"type\":\"email\",\"placeholder\":\"Enter Email\",\"list\":\"email_list\",\"error\":(invalid && validated) || checker.exist,\"error-message\":errors[0] || 'Not available'},on:{\"blur\":checker.check},model:{value:(_vm.formData.email),callback:function ($$v) {_vm.$set(_vm.formData, \"email\", $$v)},expression:\"formData.email\"}}),_c('datalist',{attrs:{\"id\":\"email_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})]}}],null,true),model:{value:(_vm.formData.email),callback:function ($$v) {_vm.$set(_vm.formData, \"email\", $$v)},expression:\"formData.email\"}})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                            Picture *\\n                                        \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Picture\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('div',{staticClass:\"q-mb-sm\"},[_c('q-uploader-input',{staticStyle:{\"width\":\"100%\"},attrs:{\"max-files\":1,\"max-file-size\":3,\"accept\":\".jpg,.png,.gif,.jpeg\",\"multiple\":false,\"square\":\"\",\"flat\":\"\",\"bordered\":\"\",\"label\":\"Choose files or drop files here\",\"upload-path\":\"fileuploader/upload/picture\"},model:{value:(_vm.formData.picture),callback:function ($$v) {_vm.$set(_vm.formData, \"picture\", $$v)},expression:\"formData.picture\"}}),(invalid && validated)?_c('small',{staticClass:\"q-pa-sm text-negative\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()],1)]}}],null,true)})],1)])]),(_vm.showSubmitButton)?_c('div',{staticClass:\"text-center q-my-md\"},[_c('q-btn',{attrs:{\"rounded\":false,\"color\":\"primary\",\"no-caps\":\"\",\"unelevated\":\"\",\"type\":\"submit\",\"disabled\":invalid,\"icon\":\"send\",\"loading\":_vm.saving}},[_c('q-spinner-oval',{attrs:{\"slot\":\"loading\"},slot:\"loading\"}),_vm._v(\" Submit\\n                                    \")],1)],1):_vm._e()]}}])}),_vm._t(\"default\",null,{\"submit\":_vm.submit,\"saving\":_vm.saving})],2)])],1)])])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"main-page\">\r\n        <template v-if=\"showHeader\">\r\n            <q-card   class=\"page-section q-py-sm q-px-md q-mb-md q-mb-md nice-shadow-18\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-between q-col-gutter-md\">\r\n                        <div class=\"col-md-8 col-12 \">\r\n                            <div class=\"\">\r\n                                <div class=\"row  items-center q-col-gutter-sm q-px-sm\">\r\n                                    <div class=\"col\">\r\n                                        <div class=\"text-h6 text-primary\">User registration</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-4 col-12 comp-grid\">\r\n                            <div class=\"\">\r\n                                <div class=\"\">\r\n                                    <div class=\"text-center\">\r\n                                        Already have an account?  <q-btn     :rounded=\"false\"  no-caps  unelevated    color=\"primary\" icon=\"account_box\" to=\"/\"> Login</q-btn>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </q-card>\r\n        </template>\r\n        <section class=\"page-section q-mb-md\">\r\n            <div class=\"container\">\r\n                <div class=\"row q-col-gutter-md\">\r\n                    <div class=\"col-md-9 col-12 comp-grid\">\r\n                        <q-card   class=\"q-pa-md nice-shadow-18\">\r\n                            <div>\r\n                                <ValidationObserver ref=\"observer\" v-slot=\"{ invalid }\" tag=\"form\" @submit.prevent=\"startSaveRecord()\" @reset=\"resetForm\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-3 col-12\">\r\n                                                Username *\r\n                                            </div>\r\n                                            <div class=\"col-sm-9 col-12\">\r\n                                                <check-duplicate v-model=\"formData.username\" check-path=\"components_data/users_username_exist/\" v-slot=\"checker\">\r\n                                                <ValidationProvider :rules=\"{required:true}\" name=\"Username\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                    <q-input outlined dense  ref=\"ctrlusername\" @blur=\"checker.check\" :loading=\"checker.loading\" v-model=\"formData.username\"  label=\"Username\" type=\"text\" placeholder=\"Enter Username\"   list=\"username_list\"  \r\n                                                    class=\"\" :error=\"(invalid && validated) || checker.exist\" :error-message=\"errors[0] || 'Not available'\">\r\n                                                    </q-input>\r\n                                                    <datalist id=\"username_list\">\r\n                                                    <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                    </datalist>\r\n                                                </ValidationProvider>\r\n                                                </check-duplicate>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-3 col-12\">\r\n                                                Password *\r\n                                            </div>\r\n                                            <div class=\"col-sm-9 col-12\">\r\n                                                <ValidationProvider :rules=\"{required:true}\" name=\"Password\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                    <q-input outlined dense  ref=\"ctrlpassword\" v-model=\"formData.password\"  label=\"Password\" :type=\"isPwd ? 'password' : 'text'\" placeholder=\"Enter Password\"   list=\"password_list\"  \r\n                                                    class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                    <template v-slot:append>\r\n                                                        <q-icon\r\n                                                        :name=\"isPwd ? 'visibility_off' : 'visibility'\"\r\n                                                        class=\"cursor-pointer\"\r\n                                                        @click=\"isPwd = !isPwd\"\r\n                                                        />\r\n                                                    </template>\r\n                                                    </q-input>\r\n                                                    <datalist id=\"password_list\">\r\n                                                    <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                    </datalist>\r\n                                                </ValidationProvider>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-3 col-12\">\r\n                                                Confirm Password *\r\n                                            </div>\r\n                                            <div class=\"col-sm-9 col-12\">\r\n                                                <ValidationProvider :rules=\"{required:true, is: formData.password}\" name=\"Confirm Password\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                    <q-input outlined dense  ref=\"\" v-model=\"formData.confirm_password\" type=\"password\" label=\"Confirm Password\" placeholder=\"Confirm Password\" :error=\"invalid && validated\" :error-message=\"errors[0]\" >\r\n                                                    <template v-slot:append>\r\n                                                        <q-icon\r\n                                                        :name=\"isPwd ? 'visibility_off' : 'visibility'\"\r\n                                                        class=\"cursor-pointer\"\r\n                                                        @click=\"isPwd = !isPwd\"\r\n                                                        />\r\n                                                    </template>\r\n                                                    </q-input>\r\n                                                </ValidationProvider>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-3 col-12\">\r\n                                                Email *\r\n                                            </div>\r\n                                            <div class=\"col-sm-9 col-12\">\r\n                                                <check-duplicate v-model=\"formData.email\" check-path=\"components_data/users_email_exist/\" v-slot=\"checker\">\r\n                                                <ValidationProvider :rules=\"{required:true, email:true}\" name=\"Email\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                    <q-input outlined dense  ref=\"ctrlemail\" @blur=\"checker.check\" :loading=\"checker.loading\" v-model=\"formData.email\"  label=\"Email\" type=\"email\" placeholder=\"Enter Email\"   list=\"email_list\"  \r\n                                                    class=\"\" :error=\"(invalid && validated) || checker.exist\" :error-message=\"errors[0] || 'Not available'\">\r\n                                                    </q-input>\r\n                                                    <datalist id=\"email_list\">\r\n                                                    <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                    </datalist>\r\n                                                </ValidationProvider>\r\n                                                </check-duplicate>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-3 col-12\">\r\n                                                Picture *\r\n                                            </div>\r\n                                            <div class=\"col-sm-9 col-12\">\r\n                                                <ValidationProvider :rules=\"{required:true}\" name=\"Picture\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                    <div class=\"q-mb-sm\">\r\n                                                        <q-uploader-input :max-files=\"1\" :max-file-size=\"3\" accept=\".jpg,.png,.gif,.jpeg\" :multiple=\"false\" square flat bordered style=\"width:100%\" label=\"Choose files or drop files here\" upload-path=\"fileuploader/upload/picture\" v-model=\"formData.picture\"></q-uploader-input>\r\n                                                        <small class=\"q-pa-sm text-negative\" v-if=\"invalid && validated\">{{errors[0]}}</small>\r\n                                                    </div>\r\n                                                    <!--pictureDropOptions-->\r\n                                                </ValidationProvider>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div v-if=\"showSubmitButton\" class=\"text-center q-my-md\">\r\n                                        <q-btn    :rounded=\"false\"  color=\"primary\"  no-caps  unelevated   type=\"submit\" :disabled=\"invalid\" icon=\"send\" :loading=\"saving\">\r\n                                            <q-spinner-oval slot=\"loading\" /> Submit\r\n                                        </q-btn>\r\n                                    </div>\r\n                                </ValidationObserver>\r\n                                <slot :submit=\"submit\" :saving=\"saving\"></slot>\r\n                            </div>\r\n                        </q-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\n\timport { PageMixin } from \"../../mixins/page.js\";\r\n\timport { AddPageMixin } from \"../../mixins/addpage.js\";\r\n\timport { mapActions } from \"vuex\";\r\n\texport default {\r\n\t\tname: 'RegisterComponent',\r\n\t\tcomponents: {\r\n\t\t},\r\n\t\tmixins: [PageMixin, AddPageMixin ],\r\n\t\tprops:{\r\n\t\t\tpageName : {\r\n\t\t\t\ttype : String,\r\n\t\t\t\tdefault : 'users',\r\n\t\t\t},\r\n\t\t\trouteName : {\r\n\t\t\t\ttype : String,\r\n\t\t\t\tdefault : 'usersuserregister',\r\n\t\t\t},\r\n\t\t\tapiPath : {\r\n\t\t\t\ttype : String,\r\n\t\t\t\tdefault : 'auth/register',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdata() {\r\n            return {\r\n\t\t\t\tformData: {\r\n\t\t\t\t\tusername: \"\", password: \"\", confirm_password: \"\", email: \"\", picture: \"\", \r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tpageTitle:{\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn \"Add New Users\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta() {\r\n\t\t\treturn {\r\n\t\t\t\ttitle: this.pageTitle\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t...mapActions('users', ['saveRecord']),\r\n\t\t\tasync startSaveRecord(){\r\n\t\t\t\tconst isFormValid = await this.$refs.observer.validate();\r\n\t\t\t\tif(isFormValid){\r\n\t\t\t\t\tthis.saving = true;\r\n\t\t\t\t\tlet payload = this.normalizedFormData();\r\n\t\t\t\t\tlet url = this.apiUrl;\r\n\t\t\t\t\tlet data = { url, payload  }\r\n\t\t\t\t\tthis.saveRecord(data).then((response) => {\r\n\t\t\t\t\t\tthis.saving = false;\r\n\t\t\t\t\t\tthis.resetForm();\r\n\t\t\t\t\t\tlet registrationData = response.data;\r\n\t\t\t\t\t\tif (registrationData.token && registrationData.user) {\r\n\t\t\t\t\t\t\tthis.$localStore.saveLoginData(registrationData, false);\r\n\t\t\t\t\t\t\twindow.location = \"/\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tthis.flashMsg(registrationData.message);\r\n\t\t\t\t\t\t\tthis.navigateTo(registrationData.nextpage);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t (response) => {\r\n\t\t\t\t\t\tthis.saving = false;\r\n\t\t\t\t\t\tthis.showPageRequestError(response);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresetForm (){\r\n\t\t\t\tthis.formData = {username: \"\", password: \"\", confirm_password: \"\", email: \"\", picture: \"\", };\r\n\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\tthis.$refs.observer.reset();\r\n\t\t\t\t});\r\n\t\t\t\tthis.$EventBus.$emit(\"resetForm\");\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t},\r\n\t};\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userregister.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userregister.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userregister.vue?vue&type=template&id=208626e1&scoped=true&\"\nimport script from \"./userregister.vue?vue&type=script&lang=js&\"\nexport * from \"./userregister.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"208626e1\",\n  null\n  \n)\n\nexport default component.exports\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QUploader from 'quasar/src/components/uploader/QUploader.js';\nimport QSpinnerOval from 'quasar/src/components/spinner/QSpinnerOval.js';\nimport qInstall from \"../../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QCard,QBtn,QInput,QIcon,QUploader,QSpinnerOval});\n"],"sourceRoot":""}