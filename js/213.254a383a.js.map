{"version":3,"sources":["webpack:///./src/pages/users/edit.vue?3b00","webpack:///src/pages/users/edit.vue","webpack:///./src/pages/users/edit.vue?5c8a","webpack:///./src/pages/users/edit.vue"],"names":[],"mappings":"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","file":"js/213.254a383a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main-page\"},[(_vm.showHeader)?[_c('q-card',{staticClass:\"page-section q-py-sm q-px-md q-mb-md nice-shadow-18\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row justify-between q-col-gutter-md\"},[_c('div',{staticClass:\"col-12 col-md-auto \"},[_c('div',{},[_c('div',{staticClass:\"row  items-center q-col-gutter-sm q-px-sm\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"text-h6 text-primary\"},[_vm._v(\"Edit Users\")])])])])])])])])]:_vm._e(),_c('section',{staticClass:\"page-section q-mb-md\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row q-col-gutter-md\"},[_c('div',{staticClass:\"col-md-9 col-12 comp-grid\"},[_c('q-card',{staticClass:\"q-pa-md nice-shadow-18\"},[_c('div',[(!_vm.loading)?_c('div',[_c('ValidationObserver',{ref:\"observer\",attrs:{\"tag\":\"form\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.startRecordUpdate()}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar invalid = ref.invalid;\nreturn [_c('div',{staticClass:\"row q-col-gutter-md\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Barangay Id *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Barangay Id\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlbarangay_id\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Barangay Id\",\"type\":\"number\",\"placeholder\":\"Enter Barangay Id\",\"step\":\"any\",\"list\":\"barangay_id_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.barangay_id),callback:function ($$v) {_vm.$set(_vm.formData, \"barangay_id\", $$v)},expression:\"formData.barangay_id\"}}),_c('datalist',{attrs:{\"id\":\"barangay_id_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Username *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('check-duplicate',{attrs:{\"check-path\":\"components_data/users_username_exist/\"},scopedSlots:_vm._u([{key:\"default\",fn:function(checker){return [_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Username\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlusername\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"loading\":checker.loading,\"label\":\"Username\",\"type\":\"text\",\"placeholder\":\"Enter Username\",\"list\":\"username_list\",\"error\":(invalid && validated) || checker.exist,\"error-message\":errors[0] || 'Not available'},on:{\"blur\":checker.check},model:{value:(_vm.formData.username),callback:function ($$v) {_vm.$set(_vm.formData, \"username\", $$v)},expression:\"formData.username\"}}),_c('datalist',{attrs:{\"id\":\"username_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})]}}],null,true),model:{value:(_vm.formData.username),callback:function ($$v) {_vm.$set(_vm.formData, \"username\", $$v)},expression:\"formData.username\"}})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    First Name *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"First Name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlfirst_name\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"First Name\",\"type\":\"text\",\"placeholder\":\"Enter First Name\",\"list\":\"first_name_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.first_name),callback:function ($$v) {_vm.$set(_vm.formData, \"first_name\", $$v)},expression:\"formData.first_name\"}}),_c('datalist',{attrs:{\"id\":\"first_name_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Last Name *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Last Name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrllast_name\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Last Name\",\"type\":\"text\",\"placeholder\":\"Enter Last Name\",\"list\":\"last_name_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.last_name),callback:function ($$v) {_vm.$set(_vm.formData, \"last_name\", $$v)},expression:\"formData.last_name\"}}),_c('datalist',{attrs:{\"id\":\"last_name_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Middle Name *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Middle Name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlmiddle_name\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Middle Name\",\"type\":\"text\",\"placeholder\":\"Enter Middle Name\",\"list\":\"middle_name_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.middle_name),callback:function ($$v) {_vm.$set(_vm.formData, \"middle_name\", $$v)},expression:\"formData.middle_name\"}}),_c('datalist',{attrs:{\"id\":\"middle_name_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Dob *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Dob\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrldob\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Dob\",\"type\":\"text\",\"placeholder\":\"Enter Dob\",\"list\":\"dob_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.dob),callback:function ($$v) {_vm.$set(_vm.formData, \"dob\", $$v)},expression:\"formData.dob\"}}),_c('datalist',{attrs:{\"id\":\"dob_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Gender *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Gender\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-field',{attrs:{\"error\":invalid && validated,\"error-message\":errors[0],\"borderless\":\"\"}},[_c('q-option-group',{ref:\"ctrlgender\",attrs:{\"options\":_vm.$menus.genderItems,\"error\":invalid && validated,\"error-message\":errors[0],\"size\":\"md\"},model:{value:(_vm.formData.gender),callback:function ($$v) {_vm.$set(_vm.formData, \"gender\", $$v)},expression:\"formData.gender\"}})],1)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Nationality *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Nationality\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlnationality\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Nationality\",\"type\":\"text\",\"placeholder\":\"Enter Nationality\",\"list\":\"nationality_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.nationality),callback:function ($$v) {_vm.$set(_vm.formData, \"nationality\", $$v)},expression:\"formData.nationality\"}}),_c('datalist',{attrs:{\"id\":\"nationality_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Unit No *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Unit No\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlunit_no\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Unit No\",\"type\":\"text\",\"placeholder\":\"Enter Unit No\",\"list\":\"unit_no_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.unit_no),callback:function ($$v) {_vm.$set(_vm.formData, \"unit_no\", $$v)},expression:\"formData.unit_no\"}}),_c('datalist',{attrs:{\"id\":\"unit_no_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Street *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Street\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlstreet\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Street\",\"type\":\"text\",\"placeholder\":\"Enter Street\",\"list\":\"street_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.street),callback:function ($$v) {_vm.$set(_vm.formData, \"street\", $$v)},expression:\"formData.street\"}}),_c('datalist',{attrs:{\"id\":\"street_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Contact *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Contact\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlcontact\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"Contact\",\"type\":\"text\",\"placeholder\":\"Enter Contact\",\"list\":\"contact_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.contact),callback:function ($$v) {_vm.$set(_vm.formData, \"contact\", $$v)},expression:\"formData.contact\"}}),_c('datalist',{attrs:{\"id\":\"contact_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Email *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('check-duplicate',{attrs:{\"check-path\":\"components_data/users_email_exist/\"},scopedSlots:_vm._u([{key:\"default\",fn:function(checker){return [_c('ValidationProvider',{attrs:{\"rules\":{required:true, email:true},\"name\":\"Email\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrlemail\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"loading\":checker.loading,\"label\":\"Email\",\"type\":\"email\",\"placeholder\":\"Enter Email\",\"list\":\"email_list\",\"error\":(invalid && validated) || checker.exist,\"error-message\":errors[0] || 'Not available'},on:{\"blur\":checker.check},model:{value:(_vm.formData.email),callback:function ($$v) {_vm.$set(_vm.formData, \"email\", $$v)},expression:\"formData.email\"}}),_c('datalist',{attrs:{\"id\":\"email_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})]}}],null,true),model:{value:(_vm.formData.email),callback:function ($$v) {_vm.$set(_vm.formData, \"email\", $$v)},expression:\"formData.email\"}})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    Picture *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"Picture\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('div',{staticClass:\"q-mb-sm\"},[_c('q-uploader-input',{staticStyle:{\"width\":\"100%\"},attrs:{\"max-files\":1,\"max-file-size\":3,\"accept\":\".jpg,.png,.gif,.jpeg\",\"multiple\":false,\"square\":\"\",\"flat\":\"\",\"bordered\":\"\",\"label\":\"Choose files or drop files here\",\"upload-path\":\"fileuploader/upload/picture\"},model:{value:(_vm.formData.picture),callback:function ($$v) {_vm.$set(_vm.formData, \"picture\", $$v)},expression:\"formData.picture\"}}),(invalid && validated)?_c('small',{staticClass:\"q-pa-sm text-negative\"},[_vm._v(_vm._s(errors[0]))]):_vm._e(),_c('div',{staticClass:\"q-pa-xs\"},[_c('file-viewer',{attrs:{\"removable\":\"\"},model:{value:(_vm.formData.picture),callback:function ($$v) {_vm.$set(_vm.formData, \"picture\", $$v)},expression:\"formData.picture\"}})],1)],1)]}}],null,true)})],1)])]),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-3 col-12\"},[_vm._v(\"\\n                                                    E Signature *\\n                                                \")]),_c('div',{staticClass:\"col-sm-9 col-12\"},[_c('ValidationProvider',{attrs:{\"rules\":{required:true},\"name\":\"E Signature\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar invalid = ref.invalid;\nvar validated = ref.validated;\nreturn [_c('q-input',{ref:\"ctrle_signature\",attrs:{\"outlined\":\"\",\"dense\":\"\",\"label\":\"E Signature\",\"type\":\"text\",\"placeholder\":\"Enter E Signature\",\"list\":\"e_signature_list\",\"error\":invalid && validated,\"error-message\":errors[0]},model:{value:(_vm.formData.e_signature),callback:function ($$v) {_vm.$set(_vm.formData, \"e_signature\", $$v)},expression:\"formData.e_signature\"}}),_c('datalist',{attrs:{\"id\":\"e_signature_list\"}},_vm._l((_vm.$menus.nameItems),function(menu,index){return _c('option',{key:index,domProps:{\"value\":menu.value}},[_vm._v(_vm._s(menu.label))])}),0)]}}],null,true)})],1)])])]),(_vm.showSubmitButton)?_c('div',{staticClass:\"text-center q-my-md\"},[_c('q-btn',{attrs:{\"rounded\":false,\"color\":\"primary\",\"no-caps\":\"\",\"unelevated\":\"\",\"type\":\"submit\",\"disabled\":invalid,\"icon\":\"send\",\"loading\":_vm.saving}},[_c('q-spinner-oval',{attrs:{\"slot\":\"loading\"},slot:\"loading\"}),_vm._v(\" Update\\n                                        \")],1)],1):_vm._e()]}}],null,false,3584285387)}),_vm._t(\"default\",null,{\"submit\":_vm.submit,\"saving\":_vm.saving})],2):_c('div',{staticClass:\"q-pa-sm text-center\"},[_c('q-spinner',{attrs:{\"size\":40,\"color\":\"accent\",\"indeterminate\":\"\"}}),_vm._v(\"\\n                                Loading...\\n                            \")],1)])])],1)])])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"main-page\">\r\n        <template v-if=\"showHeader\">\r\n            <q-card   class=\"page-section q-py-sm q-px-md q-mb-md nice-shadow-18\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-between q-col-gutter-md\">\r\n                        <div class=\"col-12 col-md-auto \">\r\n                            <div class=\"\">\r\n                                <div class=\"row  items-center q-col-gutter-sm q-px-sm\">\r\n                                    <div class=\"col\">\r\n                                        <div class=\"text-h6 text-primary\">Edit Users</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </q-card>\r\n        </template>\r\n        <section class=\"page-section q-mb-md\">\r\n            <div class=\"container\">\r\n                <div class=\"row q-col-gutter-md\">\r\n                    <div class=\"col-md-9 col-12 comp-grid\">\r\n                        <q-card   class=\"q-pa-md nice-shadow-18\">\r\n                            <div>\r\n                                <div v-if=\"!loading\">\r\n                                    <ValidationObserver ref=\"observer\" v-slot=\"{ invalid }\" tag=\"form\" @submit.prevent=\"startRecordUpdate()\">\r\n                                        <!--[form-content-start]-->\r\n                                        <div class=\"row q-col-gutter-md\">\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Barangay Id *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Barangay Id\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlbarangay_id\" v-model=\"formData.barangay_id\"  label=\"Barangay Id\" type=\"number\" placeholder=\"Enter Barangay Id\"   step=\"any\" list=\"barangay_id_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"barangay_id_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Username *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <check-duplicate v-model=\"formData.username\" check-path=\"components_data/users_username_exist/\" v-slot=\"checker\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Username\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlusername\" @blur=\"checker.check\" :loading=\"checker.loading\" v-model=\"formData.username\"  label=\"Username\" type=\"text\" placeholder=\"Enter Username\"   list=\"username_list\"  \r\n                                                            class=\"\" :error=\"(invalid && validated) || checker.exist\" :error-message=\"errors[0] || 'Not available'\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"username_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                        </check-duplicate>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        First Name *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"First Name\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlfirst_name\" v-model=\"formData.first_name\"  label=\"First Name\" type=\"text\" placeholder=\"Enter First Name\"   list=\"first_name_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"first_name_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Last Name *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Last Name\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrllast_name\" v-model=\"formData.last_name\"  label=\"Last Name\" type=\"text\" placeholder=\"Enter Last Name\"   list=\"last_name_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"last_name_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Middle Name *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Middle Name\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlmiddle_name\" v-model=\"formData.middle_name\"  label=\"Middle Name\" type=\"text\" placeholder=\"Enter Middle Name\"   list=\"middle_name_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"middle_name_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Dob *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Dob\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrldob\" v-model=\"formData.dob\"  label=\"Dob\" type=\"text\" placeholder=\"Enter Dob\"   list=\"dob_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"dob_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Gender *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Gender\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-field :error=\"invalid && validated\" :error-message=\"errors[0]\"  borderless>\r\n                                                            <q-option-group ref=\"ctrlgender\" v-model=\"formData.gender\" :options=\"$menus.genderItems\"  :error=\"invalid && validated\" :error-message=\"errors[0]\"   size=\"md\" ></q-option-group>\r\n                                                            </q-field>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Nationality *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Nationality\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlnationality\" v-model=\"formData.nationality\"  label=\"Nationality\" type=\"text\" placeholder=\"Enter Nationality\"   list=\"nationality_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"nationality_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Unit No *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Unit No\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlunit_no\" v-model=\"formData.unit_no\"  label=\"Unit No\" type=\"text\" placeholder=\"Enter Unit No\"   list=\"unit_no_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"unit_no_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Street *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Street\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlstreet\" v-model=\"formData.street\"  label=\"Street\" type=\"text\" placeholder=\"Enter Street\"   list=\"street_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"street_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Contact *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Contact\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlcontact\" v-model=\"formData.contact\"  label=\"Contact\" type=\"text\" placeholder=\"Enter Contact\"   list=\"contact_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"contact_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Email *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <check-duplicate v-model=\"formData.email\" check-path=\"components_data/users_email_exist/\" v-slot=\"checker\">\r\n                                                        <ValidationProvider :rules=\"{required:true, email:true}\" name=\"Email\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrlemail\" @blur=\"checker.check\" :loading=\"checker.loading\" v-model=\"formData.email\"  label=\"Email\" type=\"email\" placeholder=\"Enter Email\"   list=\"email_list\"  \r\n                                                            class=\"\" :error=\"(invalid && validated) || checker.exist\" :error-message=\"errors[0] || 'Not available'\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"email_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                        </check-duplicate>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        Picture *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"Picture\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <div class=\"q-mb-sm\">\r\n                                                                <q-uploader-input :max-files=\"1\" :max-file-size=\"3\" accept=\".jpg,.png,.gif,.jpeg\" :multiple=\"false\" square flat bordered style=\"width:100%\" label=\"Choose files or drop files here\" upload-path=\"fileuploader/upload/picture\" v-model=\"formData.picture\"></q-uploader-input>\r\n                                                                <small class=\"q-pa-sm text-negative\" v-if=\"invalid && validated\">{{errors[0]}}</small>\r\n                                                                <div class=\"q-pa-xs\"><file-viewer removable v-model=\"formData.picture\"></file-viewer></div>\r\n                                                            </div>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3 col-12\">\r\n                                                        E Signature *\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-9 col-12\">\r\n                                                        <ValidationProvider :rules=\"{required:true}\" name=\"E Signature\" v-slot=\"{ errors, invalid, validated }\">\r\n                                                            <q-input outlined dense  ref=\"ctrle_signature\" v-model=\"formData.e_signature\"  label=\"E Signature\" type=\"text\" placeholder=\"Enter E Signature\"   list=\"e_signature_list\"  \r\n                                                            class=\"\" :error=\"invalid && validated\" :error-message=\"errors[0]\">\r\n                                                            </q-input>\r\n                                                            <datalist id=\"e_signature_list\">\r\n                                                            <option v-for=\"(menu, index) in $menus.nameItems\" :key=\"index\" :value=\"menu.value\">{{ menu.label }}</option>\r\n                                                            </datalist>\r\n                                                        </ValidationProvider>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!--[form-content-end]-->\r\n                                        <div v-if=\"showSubmitButton\" class=\"text-center q-my-md\">\r\n                                            <q-btn    :rounded=\"false\"  color=\"primary\"  no-caps  unelevated   type=\"submit\" :disabled=\"invalid\" icon=\"send\" :loading=\"saving\">\r\n                                                <q-spinner-oval slot=\"loading\" /> Update\r\n                                            </q-btn>\r\n                                        </div>\r\n                                    </ValidationObserver>\r\n                                    <slot :submit=\"submit\" :saving=\"saving\"></slot>\r\n                                </div>\r\n                                <div v-else class=\"q-pa-sm text-center\">\r\n                                    <q-spinner\r\n                                    :size=\"40\"\r\n                                    color=\"accent\"\r\n                                    indeterminate>\r\n                                    </q-spinner>\r\n                                    Loading...\r\n                                </div>\r\n                            </div>\r\n                        </q-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n<script>\r\n\timport { PageMixin } from \"../../mixins/page.js\";\r\n\timport { EditPageMixin } from \"../../mixins/editpage.js\";\r\n\timport { mapActions } from \"vuex\";\r\n\texport default {\r\n\t\tname: 'editUsersPage',\r\n\t\tcomponents: {\r\n\t\t},\r\n\t\tmixins: [PageMixin, EditPageMixin ],\r\n\t\tprops: {\r\n\t\t\tpageName: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'users',\r\n\t\t\t},\r\n\t\t\tidName: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'id',\r\n\t\t\t},\r\n\t\t\trouteName: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'usersedit',\r\n\t\t\t},\r\n\t\t\tpagePath: {\r\n\t\t\t\ttype : String,\r\n\t\t\t\tdefault : 'users/edit',\r\n\t\t\t},\r\n\t\t\tapiPath: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'users/edit',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdata() {\r\n            return {\r\n\t\t\t\tformData: {\r\n\t\t\t\t\tbarangay_id: \"\", username: \"\", first_name: \"\", last_name: \"\", middle_name: \"\", dob: \"\", gender: \"\", nationality: \"\", unit_no: \"\", street: \"\", contact: \"\", email: \"\", picture: \"\", e_signature: \"\", \r\n\t\t\t\t},\r\n        \t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tpageTitle:{\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn \"Edit Users\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmeta () {\r\n\t\t\treturn {\r\n\t\t\t\ttitle: this.pageTitle // set browser page title\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t...mapActions('users', ['updateRecord', 'fetchRecord']),\r\n\t\t\tasync startRecordUpdate(){\r\n\t\t\t\tconst isFormValid = await this.$refs.observer.validate();\r\n\t\t\t\tif(isFormValid){\r\n\t\t\t\t\tthis.saving = true;\r\n\t\t\t\t\tlet id = this.id;\r\n\t\t\t\t\tlet url = this.apiUrl;\r\n\t\t\t\t\tlet payload = this.normalizedFormData();\r\n\t\t\t\t\tlet data = { id, url, payload }\r\n\t\t\t\t\tthis.updateRecord(data).then(\r\n\t\t\t\t\t\t(response) => {\r\n\t\t\t\t\t\t\tthis.saving = false;\r\n\t\t\t\t\t\t\tthis.flashMsg(this.msgAfterUpdate);\r\n\t\t\t\t\t\t\tthis.resetForm();\r\n\t\t\t\t\t\t\tthis.closeDialogs();// close page dialog that if opened\r\n\t\t\t\t\t\t\tthis.navigateTo(`/users`);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(response) => {\r\n\t\t\t\t\t\t\tthis.saving = false;\r\n\t\t\t\t\t\t\tthis.showPageRequestError(response);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tupdateFormFields: function(){\r\n\t\t\t\t//update form fields value after load from api\r\n\t\t\t\t//e.g convert fieldvalue (value,value2,value2) to array \r\n            },\r\n\t\t\tresetForm (){\r\n\t\t\t\t//reset form fields value\r\n\t\t\t\tthis.formData = {barangay_id: \"\", username: \"\", first_name: \"\", last_name: \"\", middle_name: \"\", dob: \"\", gender: \"\", nationality: \"\", unit_no: \"\", street: \"\", contact: \"\", email: \"\", picture: \"\", e_signature: \"\", };\r\n\t\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\t\tthis.$refs.observer.reset();\r\n\t\t\t\t});\r\n\t\t\t\t//raise event to reset other custom form components\r\n\t\t\t\tthis.$EventBus.$emit(\"resetForm\");\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@quasar/app/lib/webpack/loader.auto-import-client.js?kebab!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=28c9027a&scoped=true&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"28c9027a\",\n  null\n  \n)\n\nexport default component.exports\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QField from 'quasar/src/components/field/QField.js';\nimport QOptionGroup from 'quasar/src/components/option-group/QOptionGroup.js';\nimport QUploader from 'quasar/src/components/uploader/QUploader.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QSpinnerOval from 'quasar/src/components/spinner/QSpinnerOval.js';\nimport QSpinner from 'quasar/src/components/spinner/QSpinner.js';\nimport qInstall from \"../../../node_modules/@quasar/app/lib/webpack/runtime.auto-import.js\";\nqInstall(component, 'components', {QCard,QInput,QField,QOptionGroup,QUploader,QBtn,QSpinnerOval,QSpinner});\n"],"sourceRoot":""}